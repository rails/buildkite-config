#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "lib/buildkite_config"

config = Buildkite::Config::Generate.new(ARGV.shift || File.expand_path("../..", __FILE__))

config.root.join("rails.gemspec").read =~ /required_ruby_version[^0-9]+([0-9]+\.[0-9]+)/
MIN_RUBY = Gem::Version.new($1 || "2.0")

RUBY_MINORS = %w(2.4 2.5 2.6 2.7 3.0 3.1 3.2 3.3).map { |v| Gem::Version.new(v) }

MAX_RUBY =
  case config.rails_version
  when Gem::Requirement.new("< 5.1")
    Gem::Version.new("2.4")
  when Gem::Requirement.new("< 5.2")
    Gem::Version.new("2.5")
  when Gem::Requirement.new("< 6.0")
    Gem::Version.new("2.6")
  when Gem::Requirement.new("< 6.1")
    Gem::Version.new("2.7")
  end


RUBIES = []
SOFT_FAIL = []

RUBY_MINORS.select { |v| v >= MIN_RUBY }.each do |v|
  image = "ruby:#{v}"

  if MAX_RUBY && v > MAX_RUBY && !(MAX_RUBY.approximate_recommendation === v)
    SOFT_FAIL << image
  else
    RUBIES << image
  end
end

config.default_ruby = RUBIES.last || SOFT_FAIL.last

# Run steps for newer Rubies first.
RUBIES.reverse!
SOFT_FAIL.reverse!

config.soft_fail = SOFT_FAIL

# Run soft-failing Ruby steps last.
RUBIES.concat config.soft_fail

config.rubies = RUBIES

puts config.generate
